<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czbank.children_financial_v100.mapper.RegularTransInfMapper">
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf (TRANS_ID, NAME, OUT_ACCT, 
      IN_ACCT, AMT, TRANS_TIME, 
      TRANS_PERIOD)
    values (#{transId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{outAcct,jdbcType=VARCHAR}, 
      #{inAcct,jdbcType=VARCHAR}, #{amt,jdbcType=DECIMAL}, #{transTime,jdbcType=TIMESTAMP}, 
      #{transPeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        TRANS_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="outAcct != null">
        OUT_ACCT,
      </if>
      <if test="inAcct != null">
        IN_ACCT,
      </if>
      <if test="amt != null">
        AMT,
      </if>
      <if test="transTime != null">
        TRANS_TIME,
      </if>
      <if test="transPeriod != null">
        TRANS_PERIOD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outAcct != null">
        #{outAcct,jdbcType=VARCHAR},
      </if>
      <if test="inAcct != null">
        #{inAcct,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transPeriod != null">
        #{transPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf (TRANS_ID, NAME, OUT_ACCT, 
      IN_ACCT, AMT, TRANS_TIME, 
      TRANS_PERIOD)
    values (#{transId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{outAcct,jdbcType=VARCHAR}, 
      #{inAcct,jdbcType=VARCHAR}, #{amt,jdbcType=DECIMAL}, #{transTime,jdbcType=TIMESTAMP}, 
      #{transPeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        TRANS_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="outAcct != null">
        OUT_ACCT,
      </if>
      <if test="inAcct != null">
        IN_ACCT,
      </if>
      <if test="amt != null">
        AMT,
      </if>
      <if test="transTime != null">
        TRANS_TIME,
      </if>
      <if test="transPeriod != null">
        TRANS_PERIOD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outAcct != null">
        #{outAcct,jdbcType=VARCHAR},
      </if>
      <if test="inAcct != null">
        #{inAcct,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transPeriod != null">
        #{transPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf (TRANS_ID, NAME, OUT_ACCT, 
      IN_ACCT, AMT, TRANS_TIME, 
      TRANS_PERIOD)
    values (#{transId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{outAcct,jdbcType=VARCHAR}, 
      #{inAcct,jdbcType=VARCHAR}, #{amt,jdbcType=DECIMAL}, #{transTime,jdbcType=TIMESTAMP}, 
      #{transPeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        TRANS_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="outAcct != null">
        OUT_ACCT,
      </if>
      <if test="inAcct != null">
        IN_ACCT,
      </if>
      <if test="amt != null">
        AMT,
      </if>
      <if test="transTime != null">
        TRANS_TIME,
      </if>
      <if test="transPeriod != null">
        TRANS_PERIOD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outAcct != null">
        #{outAcct,jdbcType=VARCHAR},
      </if>
      <if test="inAcct != null">
        #{inAcct,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transPeriod != null">
        #{transPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf (TRANS_ID, NAME, OUT_ACCT, 
      IN_ACCT, AMT, TRANS_TIME, 
      TRANS_PERIOD)
    values (#{transId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{outAcct,jdbcType=VARCHAR}, 
      #{inAcct,jdbcType=VARCHAR}, #{amt,jdbcType=DECIMAL}, #{transTime,jdbcType=TIMESTAMP}, 
      #{transPeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        TRANS_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="outAcct != null">
        OUT_ACCT,
      </if>
      <if test="inAcct != null">
        IN_ACCT,
      </if>
      <if test="amt != null">
        AMT,
      </if>
      <if test="transTime != null">
        TRANS_TIME,
      </if>
      <if test="transPeriod != null">
        TRANS_PERIOD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outAcct != null">
        #{outAcct,jdbcType=VARCHAR},
      </if>
      <if test="inAcct != null">
        #{inAcct,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transPeriod != null">
        #{transPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.czbank.children_financial_v100.model.RegularTransInf">
    <result column="TRANS_ID" jdbcType="VARCHAR" property="transId" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OUT_ACCT" jdbcType="VARCHAR" property="outAcct" />
    <result column="IN_ACCT" jdbcType="VARCHAR" property="inAcct" />
    <result column="AMT" jdbcType="DECIMAL" property="amt" />
    <result column="TRANS_TIME" jdbcType="TIMESTAMP" property="transTime" />
    <result column="TRANS_PERIOD" jdbcType="INTEGER" property="transPeriod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANS_ID, NAME, OUT_ACCT, IN_ACCT, AMT, TRANS_TIME, TRANS_PERIOD
  </sql>
  <select id="selectByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample">
    delete from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf (TRANS_ID, NAME, OUT_ACCT, 
      IN_ACCT, AMT, TRANS_TIME, 
      TRANS_PERIOD)
    values (#{transId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{outAcct,jdbcType=VARCHAR}, 
      #{inAcct,jdbcType=VARCHAR}, #{amt,jdbcType=DECIMAL}, #{transTime,jdbcType=TIMESTAMP}, 
      #{transPeriod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czbank.children_financial_v100.model.RegularTransInf">
    insert into regular_trans_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        TRANS_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="outAcct != null">
        OUT_ACCT,
      </if>
      <if test="inAcct != null">
        IN_ACCT,
      </if>
      <if test="amt != null">
        AMT,
      </if>
      <if test="transTime != null">
        TRANS_TIME,
      </if>
      <if test="transPeriod != null">
        TRANS_PERIOD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transId != null">
        #{transId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="outAcct != null">
        #{outAcct,jdbcType=VARCHAR},
      </if>
      <if test="inAcct != null">
        #{inAcct,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="transTime != null">
        #{transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transPeriod != null">
        #{transPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czbank.children_financial_v100.model.RegularTransInfExample" resultType="java.lang.Integer">
    select count(*) from regular_trans_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update regular_trans_inf
    <set>
      <if test="record.transId != null">
        TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.outAcct != null">
        OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.inAcct != null">
        IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        AMT = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.transTime != null">
        TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.transPeriod != null">
        TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update regular_trans_inf
    set TRANS_ID = #{record.transId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OUT_ACCT = #{record.outAcct,jdbcType=VARCHAR},
      IN_ACCT = #{record.inAcct,jdbcType=VARCHAR},
      AMT = #{record.amt,jdbcType=DECIMAL},
      TRANS_TIME = #{record.transTime,jdbcType=TIMESTAMP},
      TRANS_PERIOD = #{record.transPeriod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>